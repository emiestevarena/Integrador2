@startuml latercera
skinparam  Style strictuml
skinparam  SequenceMessageAlignment center

class Cliente{
    -nombre:  String
    -apellido: String
    -documento: int
    -mail: String
    -telefono String
    +constructor
    +setters
    +getters
    +compareTo
}
class Clientes{
    -clientes: HashMap
    +constructor
    +getter
}
class Vehiculo{
    -patente: String
    -marca: String
    -modelo: String
    -aÃ±o: int
    -numeroMotor: int
    -chasis: String
    -color: String
    -tipo: Enum
    +constructor
    +getters
    +setters
    +compareTo
}
enum TipoVehiculo{
    +auto
    +camioneta
    +camion
    +moto
}
class Vehiculos{
    -vehiculos:  HashMap
    +constructor
    +getter
}

class Poliza{
    -cliente: Cliente
    -vehiculo: Vehiculo
    -numeroPoliza: int
    -inicioPoliza: GregorianCalendar
    -finPoliza: GregorianCalendar
    -cantidadCuotas: int
    -formaDePago: Enum
    -montoTotalAsegurado: int
    -incluyeGranizo: boolean
    -tipoCobertura: Enum
    +constructor
    +getter
    +setter
}

enum FormaDePago{
    +cheque
    +efectivo
    +transferencia
    +debitoautomatico
}

enum TipoCobertura{
    +total
    +contraTerceros
    +personal
}

class Polizas{
    -polizas: HashMap
    +constructor
    +getter
}

class Cuota{
    -numeroPoliza: int
    -numeroCuota: int
    -monto: double
    -pagada: boolean
    -vencimiento: GregorianCalendar
    -formaDePago: FormaDePago
    +constructor
    +getters
    +setters
}

class Cuotas{
    -cuotas: ArrayList
    +constructor
    +getter
}

class PolizaServices{
    +crearPoliza()
    +modificarPoliza()
    +eliminarPoliza()
    +consultar()
}

class ClienteServices{
    +crearCliente()
    +modificarCliente()
    +eliminarCliente()
    +consultar()
}

class VehiculoServices{
    +crearVehiculo()
    +modificarVehiculo()
    +eliminarVehiculo()
    +consultar()
}

class Facturacion{
    +crearCuota()
    +modificarCuota()
    +eliminarCuota()
    +consultar()
}

Cliente --> Clientes :almacenados en
ClienteServices --> Cliente :crea
ClienteServices --> Clientes :gestiona
Cuota --> Cuotas :almacenados en
Facturacion --> Cuota :crea
Facturacion --> Cuotas :gestiona
Facturacion --> Polizas :consulta
Poliza --> Cliente :tiene
Poliza --> Vehiculo :tiene
Poliza --> FormaDePago :usa
Poliza --> TipoCobertura :usa
Poliza --> Polizas :almacenados en
PolizaServices --> Poliza :crea
PolizaServices --> Polizas :gestiona
PolizaServices --> ClienteServices :usa
PolizaServices --> VehiculoServices :usa
Vehiculo --> TipoVehiculo :usa
Vehiculo --> Vehiculos :almacenados en
VehiculoServices --> Vehiculo :crea
VehiculoServices --> Vehiculos :gestiona
@enduml